{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Custom Hook\n// Local Storage\nimport { useState, useEffect } from \"react\";\n\nlet get = (key, initialvalue) => {\n  const returnValue = localStorage.getItem(key);\n  if (returnValue) return returnValue;\n  if (initialvalue instanceof Function) return initialvalue();\n  return value;\n};\n\nconst useLocalStorage = (key, initialvalue) => {\n  _s();\n\n  const [val, setVal] = useState(() => getorset(key, initialvalue)); //   useState(\"Prince\")\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(val));\n  }, [val]);\n}; // login.jsx (how to call it in the login page)\n// const [val, setVal] = useLocalStorage(\"name\", \"Kwame\")\n\n\n_s(useLocalStorage, \"/XytZRq6hEsjOItBfP9Orccn3KQ=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/home/portia/Documents/PreMest/Week-2/Day-1/react-app/src/components/useLocalStorage.js"],"names":["useState","useEffect","get","key","initialvalue","returnValue","localStorage","getItem","Function","value","useLocalStorage","val","setVal","getorset","setItem","JSON","stringify"],"mappings":";;AAAA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAC/B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAApB;AAEA,MAAIE,WAAJ,EAAiB,OAAOA,WAAP;AAEjB,MAAID,YAAY,YAAYI,QAA5B,EAAsC,OAAOJ,YAAY,EAAnB;AACtC,SAAOK,KAAP;AACD,CAPD;;AASA,MAAMC,eAAe,GAAG,CAACP,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAC7C,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,MAAMa,QAAQ,CAACV,GAAD,EAAMC,YAAN,CAAf,CAA9B,CAD6C,CACsB;;AAEnEH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACQ,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAeL,GAAf,CAA1B;AACD,GAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;AAGD,CAND,C,CAOA;AACA;;;GARMD,e;;AAUN,eAAeA,eAAf","sourcesContent":["// Custom Hook\n// Local Storage\n\nimport { useState, useEffect } from \"react\";\n\nlet get = (key, initialvalue) => {\n  const returnValue = localStorage.getItem(key);\n\n  if (returnValue) return returnValue;\n\n  if (initialvalue instanceof Function) return initialvalue();\n  return value;\n};\n\nconst useLocalStorage = (key, initialvalue) => {\n  const [val, setVal] = useState(() => getorset(key, initialvalue)); //   useState(\"Prince\")\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(val));\n  }, [val]);\n};\n// login.jsx (how to call it in the login page)\n// const [val, setVal] = useLocalStorage(\"name\", \"Kwame\")\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}