{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Custom Hook\n// Local Storage\nimport { useState, useEffect } from \"react\";\n\nlet get = (key, initialvalue) => {\n  const returnValue = localStorage.getItem(key);\n  if (returnValue) return returnValue;\n  if (initialValue instanceof Function) return initialValue();\n  return initialValue;\n};\n\nconst useLocalStorage = (key, initialvalue) => {\n  _s();\n\n  const [val, setVal] = useState(() => get(key, initialvalue)); //   useState(\"Prince\")\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(val));\n  }, [val]);\n}; // login.jsx (how to call it in the login page)\n// const [val, setVal] = useLocalStorage(\"name\", \"Kwame\")\n\n\n_s(useLocalStorage, \"uA35gV/b2ijJyrvoifYqRJdRhh8=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/home/portia/Documents/PreMest/Week-2/Day-1/react-app/src/components/useLocalStorage.js"],"names":["useState","useEffect","get","key","initialvalue","returnValue","localStorage","getItem","initialValue","Function","useLocalStorage","val","setVal","setItem","JSON","stringify"],"mappings":";;AAAA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAC/B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAApB;AAEA,MAAIE,WAAJ,EAAiB,OAAOA,WAAP;AAEjB,MAAIG,YAAY,YAAYC,QAA5B,EAAsC,OAAOD,YAAY,EAAnB;AACtC,SAAOA,YAAP;AACD,CAPD;;AASA,MAAME,eAAe,GAAG,CAACP,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAC7C,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,MAAME,GAAG,CAACC,GAAD,EAAMC,YAAN,CAAV,CAA9B,CAD6C,CACiB;;AAE9DH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACO,OAAb,CAAqBV,GAArB,EAA0BW,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA1B;AACD,GAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;AAGD,CAND,C,CAOA;AACA;;;GARMD,e;;AAUN,eAAeA,eAAf","sourcesContent":["// Custom Hook\n// Local Storage\n\nimport { useState, useEffect } from \"react\";\n\nlet get = (key, initialvalue) => {\n  const returnValue = localStorage.getItem(key);\n\n  if (returnValue) return returnValue;\n\n  if (initialValue instanceof Function) return initialValue();\n  return initialValue;\n};\n\nconst useLocalStorage = (key, initialvalue) => {\n  const [val, setVal] = useState(() => get(key, initialvalue)); //   useState(\"Prince\")\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(val));\n  }, [val]);\n};\n// login.jsx (how to call it in the login page)\n// const [val, setVal] = useLocalStorage(\"name\", \"Kwame\")\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}